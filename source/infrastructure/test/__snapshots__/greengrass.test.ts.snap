// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`M2C2 greengrass resource creation test 1`] = `
Object {
  "Mappings": Object {
    "Solution": Object {
      "Parameters": Object {
        "Id": "SO0070",
        "JobMetadataPrefix": "job-metadata/",
        "Version": "v2.2.0",
      },
    },
    "SourceCode": Object {
      "General": Object {
        "KeyPrefix": "Prefix",
        "S3Bucket": "Bucket",
      },
    },
  },
  "Resources": Object {
    "TestGreengrassGGCertCreatorADEF5205": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "TestGreengrassGGCertCreatorPolicy6B65D745",
      ],
      "Properties": Object {
        "Resource": "CreateGGCertAndKeys",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "TestGreengrassGGCertCreatorLambdaCustomResource1BAEEAB2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "TestGreengrassGGCertCreatorLambdaCustomResource1BAEEAB2": Object {
      "DependsOn": Array [
        "TestGreengrassGGCertCreatorRoleEFF48E33",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "The CloudWatch logs permission is added in the role.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::FindInMap": Array [
                    "SourceCode",
                    "General",
                    "S3Bucket",
                  ],
                },
                "-",
                Object {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::FindInMap": Array [
                    "SourceCode",
                    "General",
                    "KeyPrefix",
                  ],
                },
                "/m2c2-helper.zip",
              ],
            ],
          },
        },
        "Description": "AWS Machine to Cloud job builder function that creates the certificate, keypair, config, and install script for the Greengrass edge device",
        "Environment": Object {
          "Variables": Object {
            "AccountID": Object {
              "Ref": "AWS::AccountId",
            },
            "S3Bucket": Object {
              "Ref": "TestM2C2BucketBCB85E3A",
            },
            "SolutionId": Object {
              "Fn::FindInMap": Array [
                "Solution",
                "Parameters",
                "Id",
              ],
            },
            "SolutionVersion": Object {
              "Fn::FindInMap": Array [
                "Solution",
                "Parameters",
                "Version",
              ],
            },
            "StackName": Object {
              "Ref": "AWS::StackName",
            },
            "ThingArn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":iot:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":thing/",
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-M2C2DeviceGateway",
                ],
              ],
            },
            "ThingName": Object {
              "Ref": "TestGreengrassm2c2DeviceGateway87B9CF89",
            },
          },
        },
        "Handler": "gg_custom_resource.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestGreengrassGGCertCreatorRoleEFF48E33",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestGreengrassGGCertCreatorPolicy6B65D745": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The * resource is required for the IoT actions for the Lambda function to preform.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "TestM2C2BucketBCB85E3A",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "TestM2C2BucketBCB85E3A",
                      },
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "iot:ListThingPrincipals",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iot:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":thing/",
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "-M2C2DeviceGateway",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "iot:CreateKeysAndCertificate",
                "iot:DescribeEndpoint",
                "iot:UpdateCertificate",
                "iot:UpdateThingShadow",
                "iot:DeleteCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "greengrass:ResetDeployments",
                "greengrass:GetGroup",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":greengrass:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":/greengrass/groups/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestGreengrassGGCertCreatorPolicy6B65D745",
        "Roles": Array [
          Object {
            "Ref": "TestGreengrassGGCertCreatorRoleEFF48E33",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestGreengrassGGCertCreatorRoleEFF48E33": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestGreengrassGGCertDeleteFC2C1186": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "CertId": Object {
          "Fn::GetAtt": Array [
            "TestGreengrassGGCertCreatorADEF5205",
            "certificateId",
          ],
        },
        "GreengrassGroupId": Object {
          "Fn::GetAtt": Array [
            "TestGreengrassm2c2GreengrassGroup46AF3B63",
            "Id",
          ],
        },
        "Resource": "DeleteGGCertAndKeys",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "TestGreengrassGGCertCreatorLambdaCustomResource1BAEEAB2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "TestGreengrassM2C2GreengrassResourcePolicyA68D4B1F": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The * resource on its permission policy allows M2C2GreengrassResourcePolicy to interact with multiple topics and IoT things.",
            },
            Object {
              "id": "F4",
              "reason": "This policy is for Greengrass group to control Greengrass group fully so * action is needed.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iot:GetThingShadow",
                "iot:UpdateThingShadow",
                "iot:DeleteThingShadow",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":thing/GG_*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":thing/GG_*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":thing/*-gcm",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":thing/*-gda",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":thing/*-gci",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "iot:Publish",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iot:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":topic/m2c2/job/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "greengrass:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/greengrass/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "kinesis:PutRecords",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/TestStreamArn",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestGreengrassM2C2GreengrassResourcePolicyA68D4B1F",
        "Roles": Array [
          Object {
            "Ref": "TestGreengrassM2C2GreengrassResourceRole537B05C2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestGreengrassM2C2GreengrassResourceRole537B05C2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "greengrass.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestGreengrassM2C2IoTResourcePolicy5B350BEF": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W38",
              "reason": "The *  action is a placeholder for Greengrass until further testing is performed.",
            },
            Object {
              "id": "W39",
              "reason": "The * resource on its permission policy allows to manipulate Greegrass resource.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "greengrass:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iot:Connect",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":client/",
                      Object {
                        "Ref": "AWS::StackName",
                      },
                      "-M2C2DeviceGateway*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "iot:GetThingShadow",
                "iot:UpdateThingShadow",
                "iot:DeleteThingShadow",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":thing/",
                      Object {
                        "Ref": "AWS::StackName",
                      },
                      "-M2C2DeviceGateway*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "iot:Publish",
                "iot:Receive",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":topic/m2c2/job/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":topic/$aws/things/",
                      Object {
                        "Ref": "AWS::StackName",
                      },
                      "-M2C2DeviceGateway*/shadow/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "iot:Subscribe",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":topicfilter/m2c2/job/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iot:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":topicfilter/$aws/things/",
                      Object {
                        "Ref": "AWS::StackName",
                      },
                      "-M2C2DeviceGateway*/shadow/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IoT::Policy",
    },
    "TestGreengrassM2C2PolicyPrincipalAttachmentBA73A0D6": Object {
      "Properties": Object {
        "PolicyName": Object {
          "Ref": "TestGreengrassM2C2IoTResourcePolicy5B350BEF",
        },
        "Principal": Object {
          "Fn::GetAtt": Array [
            "TestGreengrassGGCertCreatorADEF5205",
            "certificateArn",
          ],
        },
      },
      "Type": "AWS::IoT::PolicyPrincipalAttachment",
    },
    "TestGreengrassm2c2CoreDefinitionBB2C9CB1": Object {
      "Properties": Object {
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-M2C2GreengrassGroup_Core",
            ],
          ],
        },
      },
      "Type": "AWS::Greengrass::CoreDefinition",
    },
    "TestGreengrassm2c2CoreDefinitionVersion0790E182": Object {
      "Properties": Object {
        "CoreDefinitionId": Object {
          "Fn::GetAtt": Array [
            "TestGreengrassm2c2CoreDefinitionBB2C9CB1",
            "Id",
          ],
        },
        "Cores": Array [
          Object {
            "CertificateArn": Object {
              "Fn::GetAtt": Array [
                "TestGreengrassGGCertCreatorADEF5205",
                "certificateArn",
              ],
            },
            "Id": Object {
              "Fn::GetAtt": Array [
                "TestGreengrassm2c2CoreDefinitionBB2C9CB1",
                "Id",
              ],
            },
            "SyncShadow": true,
            "ThingArn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":iot:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":thing/",
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-M2C2DeviceGateway",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Greengrass::CoreDefinitionVersion",
    },
    "TestGreengrassm2c2DeviceGateway87B9CF89": Object {
      "Properties": Object {
        "ThingName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-M2C2DeviceGateway",
            ],
          ],
        },
      },
      "Type": "AWS::IoT::Thing",
    },
    "TestGreengrassm2c2GreengrassGroup46AF3B63": Object {
      "Properties": Object {
        "InitialVersion": Object {
          "CoreDefinitionVersionArn": Object {
            "Ref": "TestGreengrassm2c2CoreDefinitionVersion0790E182",
          },
          "LoggerDefinitionVersionArn": Object {
            "Ref": "TestGreengrassm2c2LoggerDefinitionVersionE34A3638",
          },
          "ResourceDefinitionVersionArn": Object {
            "Ref": "TestGreengrassm2c2ResourceDefinitionVersion1463C164",
          },
        },
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-M2C2GreengrassGroup",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "TestGreengrassM2C2GreengrassResourceRole537B05C2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Greengrass::Group",
    },
    "TestGreengrassm2c2LoggerDefinition6C5CB6E0": Object {
      "Properties": Object {
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-M2C2GreengrassGroup_LoggerDefinition",
            ],
          ],
        },
      },
      "Type": "AWS::Greengrass::LoggerDefinition",
    },
    "TestGreengrassm2c2LoggerDefinitionVersionE34A3638": Object {
      "Properties": Object {
        "LoggerDefinitionId": Object {
          "Fn::GetAtt": Array [
            "TestGreengrassm2c2LoggerDefinition6C5CB6E0",
            "Id",
          ],
        },
        "Loggers": Array [
          Object {
            "Component": "GreengrassSystem",
            "Id": "M2C2GreengrassFileSystemLogger",
            "Level": "INFO",
            "Space": 128,
            "Type": "FileSystem",
          },
          Object {
            "Component": "GreengrassSystem",
            "Id": "GreengrasAWSCloudWatchLogger",
            "Level": "WARN",
            "Type": "AWSCloudWatch",
          },
          Object {
            "Component": "Lambda",
            "Id": "M2C2LambdaFileSystemLogger",
            "Level": "INFO",
            "Space": 128,
            "Type": "FileSystem",
          },
          Object {
            "Component": "Lambda",
            "Id": "M2C2LambdaAWSCloudWatchLogger",
            "Level": "WARN",
            "Type": "AWSCloudWatch",
          },
        ],
      },
      "Type": "AWS::Greengrass::LoggerDefinitionVersion",
    },
    "TestGreengrassm2c2ResourceDefinitionC6BFF1B3": Object {
      "Properties": Object {
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-M2C2GreengrassGroup_ResourceDefinition",
            ],
          ],
        },
      },
      "Type": "AWS::Greengrass::ResourceDefinition",
    },
    "TestGreengrassm2c2ResourceDefinitionVersion1463C164": Object {
      "Properties": Object {
        "ResourceDefinitionId": Object {
          "Fn::GetAtt": Array [
            "TestGreengrassm2c2ResourceDefinitionC6BFF1B3",
            "Id",
          ],
        },
        "Resources": Array [
          Object {
            "Id": "M2C2LocalResourceId",
            "Name": "M2C2LocalResource",
            "ResourceDataContainer": Object {
              "LocalVolumeResourceData": Object {
                "DestinationPath": "/m2c2/job",
                "GroupOwnerSetting": Object {
                  "AutoAddGroupOwner": true,
                },
                "SourcePath": "/m2c2/job",
              },
            },
          },
        ],
      },
      "Type": "AWS::Greengrass::ResourceDefinitionVersion",
    },
    "TestM2C2BucketBCB85E3A": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
